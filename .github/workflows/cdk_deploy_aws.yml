# Name of the workflow as shown in GitHub Actions UI
name: CDK Deploy

# Event that triggers this workflow — here, it's any push to the master branch
on:
  push:
    branches:
      - master  # Specifies that only pushes to 'master' will run this workflow

jobs:
  # Defines a job named 'deploy-cdk'
  deploy-cdk:
    name: Deploy CDK Stack  # Display name for the job in the Actions UI
    runs-on: ubuntu-latest  # Use GitHub's latest Ubuntu runner as the execution environment

    steps:
      # Step 1: Checkout the repository so the workflow can access your source files
      - name: Checkout Repository
        uses: actions/checkout@v3  # Official GitHub Action for checking out repo contents

      # Step 2: Set up Python — CDK apps written in Python need it to install and run dependencies
      - name: Setup Python
        uses: actions/setup-python@v4  # Action to install and configure Python
        with:
          python-version: '3.x'  # Uses the latest available Python version in the 3.x series

      # Step 3: Set up Node.js — CDK CLI is a Node-based tool, so this is required to install and run it
      - name: Setup Node.js
        uses: actions/setup-node@v3  # Action to install and configure Node.js
        with:
          node-version: '20.x'  # Use Node.js v20 (recommended LTS version)

      # Step 4: Configure AWS credentials — required to allow CDK CLI to interact with your AWS account
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2  # Official AWS GitHub Action
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Injected from GitHub secrets for safety
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Injected secret for authentication
          aws-region: ap-south-1  # Target AWS region — here, it's Mumbai (India)

      # Step 5: Install the AWS CDK CLI globally using npm
      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk  # Installs the command-line tool needed for CDK operations

      # Step 6: Install all required Python dependencies for the CDK app
      - name: Install Python CDK and Dependencies
        run: |
          pip install aws-cdk-lib constructs  # Install essential CDK core libraries
          pip install -r requirements.txt     # Install any additional packages defined by the project

      # Step 7: Bootstrap the CDK environment — sets up necessary resources in AWS (e.g., staging buckets)
      - name: Bootstrap CDK Environment
        run: cdk bootstrap  # Prepares the environment for first-time CDK usage

      # Step 8: Deploy all stacks in the CDK app — '--all' avoids hardcoding names; '--require-approval never' makes it non-interactive
      - name: Deploy All CDK Stacks
        run: cdk deploy --all --require-approval never
